name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened]
  push:
    branches: [main]
#  schedule:
#    # additionally run once per week (At 00:00 on Sunday) to maintain cache
#    - cron: '0 0 * * 0'

env:
  # Tracks whether this is a push or pull request to the main branch
  # of the main course repository, so that we can pass the workflow
  # when making correct changes to the main repository while still
  # failing it in the lecture tests with forked repositories.
  is_main_repo:
    ${{ github.repository == 'haskell-beginners-2022/exercises' &&
        (github.ref_name == 'main' || github.base_ref == 'main') }}

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure
      run: |
        cabal configure --enable-tests --test-show-details=direct --write-ghc-environment-files=always

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Install dependencies
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: |
        cabal build all

    - name: Test
      continue-on-error: true
      run: |
        cabal test all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.9.3"]
        ghc: ["9.2.5"]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v3
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Install dependencies
      run: |
        stack build --system-ghc --test --no-run-tests --no-run-benchmarks --only-dependencies

    - name: Build
      run: |
        stack build --system-ghc --test --no-run-tests --no-run-benchmarks

  lecture1:
    name: Lecture 1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 1 - Doctest
      id: doctest
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal test doctest-lecture1 --enable-tests --test-show-details=direct

    - name: Lecture 1 - Tests
      id: tests
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 1"

    - name: Confirm that lecture tests fail
      if: |
        env.is_main_repo == 'true' &&
        (steps.doctest.outcome != 'failure' || steps.tests.outcome != 'failure')
      run: |
        echo "This is for the main branch of the course repository."
        echo "Tests did not fail when they should have."
        exit 1

  lecture2:
    name: Lecture 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 2 - Doctest
      id: doctest
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal test doctest-lecture2 --enable-tests --test-show-details=direct

    - name: Lecture 2 - Tests (Normal)
      id: tests-normal
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 2/Normal"

    - name: Lecture 2 - Tests (Hard)
      id: tests-hard
      continue-on-error: true
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 2/Hard"

    - name: Confirm that lecture tests fail
      if: |
        env.is_main_repo == 'true' &&
        (steps.doctest.outcome != 'failure' ||
         steps.tests-normal.outcome != 'failure' ||
         steps.tests-hard.outcome != 'failure')
      run: |
        echo "This is for the main branch of the course repository."
        echo "Tests did not fail when they should have."
        exit 1

  lecture3:
    name: Lecture 3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 3 - Doctest
      id: doctest
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal test doctest-lecture3 --enable-tests --test-show-details=direct

    - name: Lecture 3 - Tests
      id: tests
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 3"

    - name: Confirm that lecture tests fail
      if: |
        env.is_main_repo == 'true' &&
        (steps.doctest.outcome != 'failure' || steps.tests.outcome != 'failure')
      run: |
        echo "This is for the main branch of the course repository."
        echo "Tests did not fail when they should have."
        exit 1

  lecture4:
    name: Lecture 4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.3
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 4 - Unit Tests
      id: tests
      continue-on-error: ${{ env.is_main_repo == 'true' }}
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 4"

    - name: Confirm that lecture tests fail
      if: env.is_main_repo == 'true' && steps.tests.outcome != 'failure'
      run: |
        echo "This is for the main branch of the course repository."
        echo "Tests did not fail when they should have."
        exit 1
