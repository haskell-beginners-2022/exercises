name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened]
  push:
    branches: [main]
#  schedule:
#    # additionally run once per week (At 00:00 on Sunday) to maintain cache
#    - cron: '0 0 * * 0'

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure
      run: |
        cabal configure --enable-tests --test-show-details=direct --write-ghc-environment-files=always

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Install dependencies
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: |
        cabal build all

    - name: Test
      continue-on-error: true
      run: |
        cabal test all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.9.3"]
        ghc: ["9.2.5"]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v3
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Install dependencies
      run: |
        stack build --system-ghc --test --no-run-tests --no-run-benchmarks --only-dependencies

    - name: Build
      run: |
        stack build --system-ghc --test --no-run-tests --no-run-benchmarks

  lecture1:
    name: Lecture 1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 1 - Doctest
      continue-on-error: true
      run: |
        cabal test doctest-lecture1 --enable-tests --test-show-details=direct

    - name: Lecture 1 - Tests
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 1"

  lecture2:
    name: Lecture 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 2 - Doctest
      continue-on-error: true
      run: |
        cabal test doctest-lecture2 --enable-tests --test-show-details=direct

    - name: Lecture 2 - Tests (Normal)
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 2/Normal"

    - name: Lecture 2 - Tests (Hard)
      continue-on-error: true
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 2/Hard"

  lecture3:
    name: Lecture 3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 3 - Doctest
      continue-on-error: true
      run: |
        cabal test doctest-lecture3 --enable-tests --test-show-details=direct

    - name: Lecture 3 - Tests
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 3"

  lecture4:
    name: Lecture 4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.8.1.0"]
        ghc: ["9.2.5"]
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2.4
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Lecture 4 - Unit Tests
      run: |
        cabal run exercises-test --enable-tests -- -m "Lecture 4"